// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
// swift-module-flags: -target x86_64-apple-ios14.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name TaboolaPush
import AVKit
import CoreLocation
import Foundation
import SafariServices
import Swift
@_exported import TaboolaPush
import UIKit
import UserNotifications
import WebKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@objc open class TaboolaPushSDKBuilder : ObjectiveC.NSObject {
  public init(apiKey: Swift.String? = nil, appGroupId: Swift.String? = nil)
  public func crash() -> TaboolaPush.TaboolaPushSDKBuilder
  public func push() -> TaboolaPush.TaboolaPushSDKBuilder
  public func custom() -> TaboolaPush.TaboolaPushSDKBuilder
  public func customNotificationHandling() -> TaboolaPush.TaboolaPushSDKBuilder
  public func analytics(_ isEnabled: Swift.Bool = true) -> TaboolaPush.TaboolaPushSDKBuilder
  public func build() -> TaboolaPush.TaboolaPushSDKConfig
  @objc deinit
}
extension TaboolaPush.TaboolaPushSDK {
  public static func register(_ deviceToken: Foundation.Data)
  public static func pushTrackOpen(_ handleUrl: Swift.Bool, response: UserNotifications.UNNotificationResponse, completion: @escaping (Swift.String?) -> ())
  public static func didReceiveNotification(with: UserNotifications.UNNotificationRequest, best: UserNotifications.UNMutableNotificationContent, completion: @escaping (UserNotifications.UNMutableNotificationContent) -> ())
  public static func notificationBuilderWillTerminate(with: [Swift.AnyHashable : Any], best: UserNotifications.UNMutableNotificationContent, completion: @escaping (UserNotifications.UNMutableNotificationContent) -> ())
  public static func askForNotificationsPermission()
  public static func decreseNotificationCount(forNotif: UserNotifications.UNMutableNotificationContent)
  public static func increseNotificationCount(forNotif: UserNotifications.UNMutableNotificationContent)
  public static func askForNotificationPermissionWith(on: UIKit.UIViewController)
  public static func getPreferedContentSize(with: UserNotifications.UNNotification) -> CoreFoundation.CGSize
}
public protocol TaboolaPushSDKDelegate : AnyObject {
  func notificationTokenChanged(token: Swift.String)
  func taboolaPushSDKInited(_ success: Swift.Bool)
}
extension TaboolaPush.TaboolaPushSDKDelegate {
  public func taboolaPushSDKInited(_ success: Swift.Bool)
  public func notificationTokenChanged(token: Swift.String)
}
@objc @_inheritsConvenienceInitializers public class TaboolaPushSDK : ObjectiveC.NSObject {
  weak public static var taboolaDelegate: (any TaboolaPush.TaboolaPushSDKDelegate)?
  public static func initialize(config: TaboolaPush.TaboolaPushSDKConfig)
  public static func setValueFor(_ appGroupId: Swift.String)
  public static func setUtm(_ forKey: Swift.String, _ value: Swift.String)
  public static func removeUtm(_ key: Swift.String)
  public static func getUtm(_ key: Swift.String) -> Swift.String
  @objc override dynamic public init()
  @objc deinit
}
extension TaboolaPush.TaboolaPushSDK {
  public static func getTrack() -> [Swift.String : Swift.String]
  public static func getTrackFor(key: Swift.String) -> Swift.String
  public static func removeTrack()
  public static func removeTrackFor(key: Swift.String)
  public static func track(_ event: [Swift.String : Any])
  public static func sendTrack(completion: @escaping (_ code: Swift.Int?, _ response: Swift.String?, _ error: (any Swift.Error)?) -> ())
}
@_hasMissingDesignatedInitializers public class TaboolaPushSDKConfig {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor @preconcurrency public class TaboolaPushSDKNotificationView : UIKit.UIView {
  @_Concurrency.MainActor @preconcurrency convenience public init?(notification: UserNotifications.UNNotification, _ notifextension: UIKit.UIViewController)
  @objc deinit
}
